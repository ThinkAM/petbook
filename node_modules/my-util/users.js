/*
 * module for interacting with users collection
 */

const EventEmitter = require("events");

const connect = require("./connect.js");
const models = require("./models.js");

function get_user_info(uid, ee, event) {
    /*
     * function that will retrive all info for user afer id
     *
     * on failure all fields/props will be undefined
     * */

    /* first, register callbacks */
    const user_emitter = new EventEmitter();

    /* after connecting to db */
    user_emitter.on("connection", function(ret){
	if (ret["success"] === false) {
	    ee.emit(event, ret);
	    return;
	}
	let filter = {_id: uid};
	models.user_model.find(filter, function(err, result){
	    if (err){
		let ret = {
		    success: false,
		    messages: ["Error retrieving user: " + err.message]
		};
		ee.emit(event, ret);
		return;
	    }
	    if (result.length < 1) {
		let ret = {
		    success: false,
		    messages: ["User not found"]
		};
		ee.emit(event, ret);
		return;
	    }
	    /*
	     * there should be some privacy concerns here
	     * for now, return everything, but whoever calls this
	     * should show/hide info based on privacy
	     * */
	    let ret = {
		success: true,
		messages: ["success"],
		uid: result[0]["_id"],
		firstName: result[0]["firstName"],
		lastName: result[0]["lastName"],
		email: result[0]["email"],
		password: result[0]["password"],
		type: result[0]["type"],
		gender: result[0]["gender"],
		birthday: result[0]["birthday"],
		friends: result[0]["friends"],
		avatar: result[0]["avatar"]
	    };
	    ee.emit(event, ret);
	});
    });

    /* connect to db */
    connect.connect_to_db(user_emitter, "connection");
}

/* exports */
module.exports.get_user_info = get_user_info;
