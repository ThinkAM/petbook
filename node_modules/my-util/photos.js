/*
 * module for interacting with photos collection
 */

const EventEmitter = require("events");

const default_avatar_id = "59fcd27c192bce16b2465bef";
const default_avatar_path = "photos/default_avatar.png";

const connect = require("./connect.js");
const models = require("./models.js");

function submit_photo(photo_data, ee, event) {
    /*
     * function that will attempt to save a photo
     * */

    /* first, register callbacks */
    const photo_emitter = new EventEmitter();

    /* after connecting to db */
    photo_emitter.on("connection", function(ret){
	if (ret["success"] === false) {
	    ee.emit(event, ret);
	    return;
	}
	let photo = new models.photo_model({
	    path: photo_data["path"],
	    owner: photo_data["owner"],
	    mimetype: photo_data["mimetype"],
	    description: photo_data["description"],
	    size: photo_data["size"]
	});
	/* save new post */
	photo.save(function(err, photo){
	    if (err){
		let ret = {
		    success: false,
		    messages: ["MongoDB error: " + err.message]
		};
		ee.emit(event, ret);
		return;
	    }
	    let ret = {
		success: true,
		messages: ["success"],
		photo_id: photo._id
	    };
	    ee.emit(event, ret);
	});
    });

    /* connect to db */
    connect.connect_to_db(photo_emitter, "connection");
}

function get_photo_info(photo_id, ee, event, args) {
    /*
     * returns all info for photo id
     *
     * TODO properly implement args
     * */
    const photo_emitter = new EventEmitter();
    photo_emitter.on("connection", function(ret) {
	if (ret["success"] === false) {
	    ee.emit(event, ret);
	    return;
	}
	let filter = {_id: photo_id};
	models.photo_model.find(filter, function(err, result){
	    if (err){
		let ret = {
		    success: false,
		    messages: ["Error retrieving photos: " + err.message]
		};
		ee.emit(event, ret);
		return;
	    }
	    if (result.length < 1){
		let ret = {
		    success: false,
		    messages: ["Could not find photo id"]
		};
		ee.emit(event, ret);
		return;
	    }
	    let ret = {
		success: true,
		messages: ["success"],
		path: result[0]["path"],
		owner: result[0]["owner"],
		mimetype: result[0]["mimetype"],
		description: result[0]["description"],
		size: result[0]["size"],
		args: args
	    };
	    ee.emit(event, ret);
	});
    });
    /* wait for connection if not opened */
    if (!connect.connection_active())
	connect.connect_to_db(photo_emitter, "connection");
    else
	photo_emitter.emit("connection", {success: true});
}

/* exports */
module.exports.default_avatar_id = default_avatar_id;
module.exports.default_avatar_path = default_avatar_path;
module.exports.get_photo_info = get_photo_info;
module.exports.submit_photo = submit_photo;
